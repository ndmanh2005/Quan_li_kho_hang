@{
    ViewData["Title"] = "Danh mục Nguồn khách hàng";
}

<style>
    #editable-row-template {
        display: none;
    }
    .form-switch .form-check-input {
        width: 3em;
        height: 1.5em;
    }
</style>

<h1>@ViewData["Title"]</h1>

<div class="row mb-3 align-items-center">
    <div class="col-md-6">
        <div class="input-group">
            <input type="text" id="search-input" class="form-control" placeholder="Nhập mã hoặc tên nguồn...">
            <button id="btn-search" class="btn btn-outline-secondary" type="button">Tìm kiếm</button>
        </div>
    </div>
    <div class="col-md-6 text-end">
        <button id="btn-show-add-form" class="btn btn-primary">Thêm mới</button>
        <button class="btn btn-outline-secondary">Xuất Excel</button>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-bordered table-striped">
        <thead class="table-dark">
            <tr>
                <th>Mã nguồn</th>
                <th>Tên nguồn khách hàng</th>
                <th class="text-center">Trạng thái</th>
                <th style="width: 120px;">Thao tác</th>
            </tr>
        </thead>
        <tbody id="source-table-body">
        </tbody>
    </table>
</div>

<table>
    <tr id="editable-row-template">
        <td><input type="text" name="Code" class="form-control" /></td>
        <td><input type="text" name="Name" class="form-control" /></td>
        <td class="text-center align-middle">
            <div class="form-check form-switch d-flex justify-content-center">
                <input class="form-check-input" type="checkbox" name="IsActive">
            </div>
        </td>
        <td>
            <button class="btn-save btn btn-sm btn-success">Lưu</button>
            <button class="btn-cancel btn btn-sm btn-secondary">Hủy</button>
        </td>
    </tr>
</table>


@section Scripts {
<script>
$(document).ready(function() {
    const $tableBody = $('#source-table-body');
    const $templateRow = $('#editable-row-template');

    function fetchAndRender(searchTerm) {
        $.ajax({
            url: '@Url.Action("Search", "CustomerSources")',
            type: 'GET',
            data: { searchTerm: searchTerm },
            success: function(sources) {
                $tableBody.empty();
                if (!sources || sources.length === 0) {
                    $tableBody.append('<tr><td colspan="4" class="text-center">Không có dữ liệu</td></tr>');
                    return;
                }
                sources.forEach(function(item) {
                    const statusText = item.isActive === 1 ? 'Hoạt động' : 'Ngừng';
                    const rowHtml = `
                        <tr data-id="${item.id}" data-code="${item.code}">
                            <td data-prop="code">${item.code}</td>
                            <td data-prop="name">${item.name}</td>
                            <td class="text-center" data-prop="isActive" data-value="${item.isActive}">${statusText}</td>
                            <td>
                                <button class="btn btn-sm btn-info btn-edit">Sửa</button>
                                <button class="btn btn-sm btn-danger btn-delete">Xóa</button>
                            </td>
                        </tr>`;
                    $tableBody.append(rowHtml);
                });
            }
        });
    }

    $('#btn-search').on('click', function() { fetchAndRender($('#search-input').val()); });
    $('#search-input').on('keypress', function(e) { if (e.which === 13) $('#btn-search').click(); });

    $('#btn-show-add-form').on('click', function() {
        if ($('#add-new-row').length > 0) return;
        const $newRow = $templateRow.clone().attr('id', 'add-new-row');
        $newRow.find('input[name="IsActive"]').prop('checked', true);
        $tableBody.prepend($newRow);
        $(this).prop('disabled', true);
    });

    $tableBody.on('click', '.btn-edit', function() {
        const $staticRow = $(this).closest('tr');
        $staticRow.data('original-html', $staticRow.html());
        
        const $editRow = $templateRow.clone().removeAttr('id').addClass('editing-row');
        $editRow.find('input[name="Code"]').val($staticRow.data('code')).prop('disabled', true); 
        $editRow.find('input[name="Name"]').val($staticRow.find('[data-prop="name"]').text());
        $editRow.find('input[name="IsActive"]').prop('checked', $staticRow.find('[data-prop="isActive"]').data('value') == 1);
        $editRow.find('.btn-save').addClass('btn-update').data('id', $staticRow.data('id'));

        $staticRow.html($editRow.html());
    });
    
    $tableBody.on('click', '.btn-cancel', function() {
        const $row = $(this).closest('tr');
        if ($row.attr('id') === 'add-new-row') {
            $row.remove();
            $('#btn-show-add-form').prop('disabled', false);
        } else {
            $row.html($row.data('original-html'));
        }
    });

    $tableBody.on('click', '.btn-save', function() {
        const $row = $(this).closest('tr');
        const isUpdate = $(this).hasClass('btn-update');
        const url = isUpdate ? '@Url.Action("Update", "CustomerSources")' : '@Url.Action("Create", "CustomerSources")';
        
        const data = {
            Id: isUpdate ? $(this).data('id') : 0,
            Code: $row.find('input[name="Code"]').val(),
            Name: $row.find('input[name="Name"]').val(),
            IsActive: $row.find('input[name="IsActive"]').is(':checked') ? 1 : 0
        };

        $.ajax({
            url: url,
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(data),
            success: function(response) {
                if (response.success) {
                    alert(isUpdate ? 'Cập nhật thành công!' : 'Thêm mới thành công!');
                    $('#btn-show-add-form').prop('disabled', false);
                    fetchAndRender($('#search-input').val());
                } else {
                    alert('Lỗi: ' + response.message);
                }
            }
        });
    });

    $tableBody.on('click', '.btn-delete', function() {
        if (!confirm('Bạn có chắc chắn muốn xóa nguồn khách hàng này?')) return;

        const $row = $(this).closest('tr');
        const id = $row.data('id');

        $.ajax({
            url: '@Url.Action("Delete", "CustomerSources")',
            type: 'POST',
            data: { id: id },
            success: function(response) {
                if (response.success) {
                    alert(response.message);
                    $row.fadeOut(300, function() { $(this).remove(); });
                } else {
                    alert('Lỗi: ' + response.message);
                }
            }
        });
    });

    fetchAndRender('');
});
</script>
}